parameters:
- name: projectDir
  type: string

jobs:
- job: Validate
  workspace:
    clean: all
  displayName: 'Validate bicep'
  steps:
    - checkout: self
      submodules: true
      fetchDepth: 0

    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk 8.x'
      inputs:
        version: 8.x

    - script: |
        echo "CPU Cores: $(nproc)"
        echo "Total Memory (GB): $(free -g | awk '/^Mem:/{print $2}')"
        echo "Disk Space (GB): $(df -h --output=size / | tail -1 | awk '{print $1}')"
        echo "OS: $(lsb_release -d | awk -F'\t' '{print $2}')"
      displayName: 'Print Server Stats'

    - script: |
        dotnet tool install --global GitVersion.Tool --version 5.*
        ln -s ~/.dotnet/tools/dotnet-gitversion ~/.dotnet/tools/gitversion
        echo "##vso[task.prependpath]$HOME/.dotnet/tools"
      displayName: 'Install GitVersion'

    - script: |
        gitversion /config GitVersion.yml /output buildserver
        INFORMATIONAL_VERSION=$(gitversion -config GitVersion.yml -showvariable InformationalVersion)
        echo "##vso[build.updatebuildnumber]$INFORMATIONAL_VERSION"
      displayName: 'Version App'

    - script: |
        az bicep uninstall
        az config set bicep.use_binary_from_path=false
        az bicep install
      displayName: 'Fix bicep setup'

    - script: |
        # AzCLI has the nasty habit of auto updating, which can break the build
        az --version
        az bicep version

        # az bicep build --file main.bicep
        az bicep lint --file main.bicep
      displayName: 'Validate bicep'
      workingDirectory: '${{ parameters.projectDir }}'

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
      inputs:
        Contents: |
          **/*.bicep
          **/*.bicepparam
          **/swagger.json
          **/*.graphql
          **/*.ps1
          **/*.sh
          !deploy/**
        SourceFolder: '${{ parameters.projectDir }}'
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: drop
        publishLocation: Container
